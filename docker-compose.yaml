services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN}  # Pass only the DOMAIN variable
    volumes:
      - ./nginx/default.conf:/etc/nginx/templates/default.conf.template:ro
      - ./certs:/etc/letsencrypt:ro
      - ./certbot/webroot:/var/www/html
      - ./pognaleey-front/build:/usr/share/nginx/html:ro
    command: [ "/bin/sh", "-c", "envsubst '$$DOMAIN' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'" ]
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  backend:
    container_name: backend
    build:
      context: ./pognaleey-back
      dockerfile: Dockerfile
    depends_on:
      - dbpostgresql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      CHAT_GPT_API_KEY: ${CHAT_GPT_API_KEY}
      DOMAIN: ${DOMAIN}
      JWT_SECRET: ${JWT_SECRET}
      KANDINSKY_API_KEY: ${KANDINSKY_API_KEY}
      KANDINSKY_API_SECRET: ${KANDINSKY_API_SECRET}
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: ./pognaleey-front
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}  # Pass API URL to build
        APP_NAME: ${APP_NAME}
        APP_SHORT_NAME: ${APP_SHORT_NAME}
    networks:
      - app-network
    volumes:
      - ./pognaleey-front/build:/mnt/build

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certs:/etc/letsencrypt             # Сертификаты Let's Encrypt
      - ./certbot/webroot:/var/www/html      # Временная папка для Certbot
      - ./certbot/log:/var/log/letsencrypt   # Логи Certbot
    entrypoint: >
      /bin/sh -c 'trap exit TERM; while :; do
      certbot renew --webroot -w /var/www/html;
      sleep 12h & wait $!;
      done'
    networks:
      - app-network

  dbpostgresql:
    image: postgres:17.2
    container_name: pognaleey-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network

networks:
  app-network:
