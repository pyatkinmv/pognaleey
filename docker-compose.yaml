services:
  nginx:
    image: nginx:1.25-alpine
    container_name: pognaleey-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro        # Конфигурация Nginx
      - ./certs:/etc/letsencrypt:ro                                   # Сертификаты Let's Encrypt
      - ./certbot/webroot:/var/www/html                               # Временная папка для Certbot
      - ./pognaleey-front/build:/usr/share/nginx/html:ro             # Статические файлы фронтенда
    depends_on:
      - pognaleey-back
      - pognaleey-front
    networks:
      - app-network


  pognaleey-back:
    container_name: pognaleey-back
    build:
      context: ./pognaleey-back
      dockerfile: Dockerfile
    depends_on:
      - dbpostgresql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      YANDEX_GPT_FOLDER_ID: ${YANDEX_GPT_FOLDER_ID}
      YANDEX_GPT_API_KEY: ${YANDEX_GPT_API_KEY}
      CHAT_GPT_API_KEY: ${CHAT_GPT_API_KEY}
      CURRENT_GPT_CLIENT: ${CURRENT_GPT_CLIENT}
      YANDEX_IMAGE_SEARCH_API_KEY: ${IMAGE_SEARCH_API_KEY}
      YANDEX_IMAGE_SEARCH_FOLDER_ID: ${IMAGE_SEARCH_FOLDER_ID}
      PIXABAY_IMAGE_SEARCH_API_KEY: ${PIXABAY_IMAGE_SEARCH_API_KEY}
      FLICKR_IMAGE_SEARCH_API_KEY: ${FLICKR_IMAGE_SEARCH_API_KEY}
      CURRENT_IMAGE_SEARCH_CLIENT: ${CURRENT_IMAGE_SEARCH_CLIENT}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - app-network

  pognaleey-front:
    container_name: pognaleey-front
    build:
      context: ./pognaleey-front
      dockerfile: Dockerfile
    networks:
      - app-network
    volumes:
      - ./pognaleey-front/build:/mnt/build

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certs:/etc/letsencrypt             # Сертификаты Let's Encrypt
      - ./certbot/webroot:/var/www/html      # Временная папка для Certbot
      - ./certbot/log:/var/log/letsencrypt   # Логи Certbot
    entrypoint: >
      /bin/sh -c 'trap exit TERM; while :; do
      certbot renew --webroot -w /var/www/html;
      sleep 12h & wait $!;
      done'
    networks:
      - app-network

  dbpostgresql:
    image: postgres:17.2
    container_name: pognaleey-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network

networks:
  app-network:
