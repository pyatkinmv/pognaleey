server {
    # Слушаем HTTP-запросы на порту 80 и перенаправляем на HTTPS
    listen 80;
    server_name $DOMAIN;

    location /.well-known/acme-challenge/ {
        root /var/www/html; # Совпадает с Certbot
    }

    location / {
        return 301 https://$host$request_uri; # Перенаправляем на HTTPS
    }
}

server {
    # Слушаем HTTPS-запросы
    listen 443 ssl;
    server_name $DOMAIN;
    client_max_body_size 5M;

    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;

    # Улучшенные настройки SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Proxy API requests to the backend
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }

    # Proxy API requests to the backend
    location /api/v1 {
        proxy_pass http://backend:8080; # 'backend' — это имя контейнера с сервером
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Origin https://$DOMAIN always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        add_header Access-Control-Allow-Credentials true always;

        # Обработка OPTIONS-запросов
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin https://$DOMAIN always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            add_header Access-Control-Allow-Credentials true always;
            return 204;
        }
    }
}
